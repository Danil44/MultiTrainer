{"version":3,"sources":["js/models/Trainer.ts","js/models/Calculator.ts","js/models/Modal.ts","js/models/Timer.ts","js/models/Score.ts","js/models/GameModal.ts","js/index.ts"],"names":[],"mappings":"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","file":"js.1fc2e410.js","sourceRoot":"..\\src","sourcesContent":["const minValue = 0;\r\nconst maxValue = 12;\r\n\r\nexport default class Trainer {\r\n  selectedOperand: number | null;\r\n  constructor() {\r\n    this.selectedOperand = null;\r\n  }\r\n  set firstOperand(operand: number | null) {\r\n    this.selectedOperand = operand;\r\n  }\r\n\r\n  getRandomExpression(): string {\r\n    let _firstOperand = this.selectedOperand\r\n      ? this.selectedOperand\r\n      : minValue + Math.random() * (maxValue - minValue - minValue + 1);\r\n\r\n    let secondOperand =\r\n      minValue + Math.random() * (maxValue - minValue - minValue + 1);\r\n    return `${Math.floor(_firstOperand)} * ${Math.floor(secondOperand)}`;\r\n  }\r\n}\r\n","export default class Calculator {\r\n  static calculateFromString(string: string): number {\r\n    return eval(string) as number;\r\n  }\r\n}\r\n","export default class Modal {\r\n  container: string;\r\n  modal: HTMLElement | null;\r\n  onClose: () => void;\r\n\r\n  constructor({\r\n    container,\r\n    onClose,\r\n  }: {\r\n    onClose: () => void;\r\n    container: string;\r\n  }) {\r\n    this.container = container;\r\n    this.modal = null;\r\n    this.onClose = onClose;\r\n  }\r\n\r\n  generete(content: DocumentFragment | HTMLElement) {\r\n    const container = document.createElement(\"div\");\r\n    container.classList.add(\"modal-container\");\r\n\r\n    document.querySelector(this.container)?.appendChild(container);\r\n\r\n    container.appendChild(content);\r\n\r\n    this.modal = container;\r\n  }\r\n\r\n  close() {\r\n    if (!this.modal) return;\r\n\r\n    this.modal.remove();\r\n\r\n    this.onClose();\r\n  }\r\n}\r\n","export default class Timer {\r\n  onCount: (time: string) => void;\r\n  onComplete: () => void;\r\n  time: string;\r\n  duration: number;\r\n  interval: number;\r\n  currentCount: number;\r\n  constructor({\r\n    onCount,\r\n    duration,\r\n    onComplete,\r\n  }: {\r\n    onComplete: () => void;\r\n    duration: number;\r\n    onCount: (time: string) => void;\r\n  }) {\r\n    this.onCount = onCount;\r\n    this.duration = duration;\r\n    this.currentCount = this.duration;\r\n    this.time = \"\";\r\n    this.interval = 0;\r\n    this.onComplete = onComplete;\r\n  }\r\n\r\n  start() {\r\n    this.interval = setInterval(() => {\r\n      this.currentCount -= 1;\r\n      this.time = this.secondsToHms(this.currentCount);\r\n      this.onCount(this.time);\r\n      if (this.currentCount === 0) this.stop();\r\n    }, 1000);\r\n  }\r\n\r\n  stop() {\r\n    this.onComplete();\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  secondsToHms(seconds: number) {\r\n    var hours = Math.floor(seconds / 3600);\r\n    var minutes = Math.floor((seconds % 3600) / 60);\r\n    var seconds = Math.floor((seconds % 3600) % 60);\r\n\r\n    return hours\r\n      ? `${hours}:${minutes}:${seconds < 10 ? `0${seconds}` : seconds}:`\r\n      : `${minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n  }\r\n}\r\n","export default class Score {\r\n  score: number;\r\n  by: number;\r\n  onIncrement: (score: number) => void;\r\n  constructor({\r\n    by,\r\n    onIncrement,\r\n  }: {\r\n    by: number;\r\n    onIncrement: (score: number) => void;\r\n  }) {\r\n    this.score = 0;\r\n    this.by = by;\r\n    this.onIncrement = onIncrement;\r\n  }\r\n\r\n  static get bestScore(): number {\r\n    const bestScore = localStorage.getItem(\"bestScore\");\r\n    return bestScore ? +bestScore : 0;\r\n  }\r\n\r\n  setBestScore() {\r\n    localStorage.setItem(\"bestScore\", JSON.stringify(this.score));\r\n  }\r\n\r\n  reset() {\r\n    this.score = 0;\r\n  }\r\n\r\n  increment() {\r\n    this.score += this.by;\r\n\r\n    this.onIncrement(this.score);\r\n  }\r\n}\r\n","export default class GameModal {\r\n  text: string;\r\n  buttonText: string;\r\n  onClose: () => void;\r\n  onOperandChoose: (e: Event) => void;\r\n\r\n  constructor({\r\n    text,\r\n    buttonText,\r\n    onClose,\r\n    onOperandChoose,\r\n  }: {\r\n    onClose: () => void;\r\n    onOperandChoose: (e: Event) => void;\r\n    buttonText: string;\r\n    text: string;\r\n  }) {\r\n    this.text = text;\r\n    this.buttonText = buttonText;\r\n    this.onClose = onClose;\r\n    this.onOperandChoose = onOperandChoose;\r\n  }\r\n\r\n  generate() {\r\n    const textElement = document.createElement(\"h2\");\r\n    const button = document.createElement(\"button\");\r\n    const fragment = new DocumentFragment();\r\n    const choosableList = this.generateChoosableList();\r\n    textElement.textContent = this.text;\r\n\r\n    button.textContent = this.buttonText;\r\n    button.addEventListener(\"click\", this.onClose);\r\n\r\n    fragment.appendChild(textElement);\r\n    fragment.appendChild(choosableList);\r\n    fragment.appendChild(button);\r\n\r\n    return fragment;\r\n  }\r\n\r\n  private generateChoosableList() {\r\n    const operandsListContainer = document.createElement(\"div\");\r\n    const operandsList = document.createElement(\"ul\");\r\n    const chooseTextElement = document.createElement(\"p\");\r\n\r\n    operandsList.id = \"js-operands-list\";\r\n    chooseTextElement.textContent =\r\n      \"Choose one of number's column if you want: \";\r\n    operandsList.appendChild(chooseTextElement);\r\n    operandsList.appendChild(this.generateNumbersColumns());\r\n    operandsList.addEventListener(\"click\", this.onOperandChoose);\r\n\r\n    operandsListContainer.appendChild(chooseTextElement);\r\n    operandsListContainer.appendChild(operandsList);\r\n\r\n    operandsListContainer.classList.add(\"choosable-operands\");\r\n\r\n    return operandsListContainer;\r\n  }\r\n\r\n  private generateNumbersColumns() {\r\n    const fragment = new DocumentFragment();\r\n\r\n    for (let i = 1; i < 12; i++) {\r\n      const col = document.createElement(\"li\");\r\n      const button = document.createElement(\"button\");\r\n\r\n      button.setAttribute(\"data-operand\", i.toString());\r\n      button.textContent = i.toString();\r\n      col.appendChild(button);\r\n\r\n      fragment.appendChild(col);\r\n    }\r\n    return fragment;\r\n  }\r\n}\r\n","import Trainer from \"./models/Trainer\";\r\nimport Calculator from \"./models/Calculator\";\r\nimport Modal from \"./models/Modal\";\r\nimport Timer from \"./models/Timer\";\r\nimport Score from \"./models/Score\";\r\nimport GameModal from \"./models/GameModal\";\r\n\r\nlet isPlaying = false;\r\n\r\nconst expressionField = document.getElementById(\"js-expression\");\r\nconst answerForm = document.getElementById(\"js-answer-form\");\r\n\r\nconst trainer = new Trainer();\r\n\r\nlet expression: string = \"\";\r\n\r\nanswerForm!.addEventListener(\"submit\", handleSubmitAnswer);\r\n\r\nconst initTimer = () => {\r\n  new Timer({\r\n    duration: 60,\r\n    onCount: (time) => handleTimer(time),\r\n    onComplete: () => completeGame(),\r\n  }).start();\r\n};\r\n\r\nconst handleTimer = (time: string) => {\r\n  const timer = document.getElementById(\"js-timer\");\r\n  const timerSpan = timer?.querySelector(\"span\");\r\n\r\n  if (!timerSpan) return;\r\n\r\n  timerSpan.textContent = time;\r\n};\r\n\r\nfunction initModal({ text }: { text: string }) {\r\n  const modal = new Modal({\r\n    container: \"body\",\r\n    onClose: () => startGame(),\r\n  });\r\n  const startModal = new GameModal({\r\n    text,\r\n    buttonText: \"Start\",\r\n    onClose: () => modal.close(),\r\n    onOperandChoose: (e) => handleSelectFirstOperand(e),\r\n  }).generate();\r\n\r\n  modal.generete(startModal);\r\n}\r\n\r\nfunction handleSelectFirstOperand(e: any) {\r\n  e.preventDefault();\r\n  if (e.target?.nodeName !== \"BUTTON\") return;\r\n\r\n  const selectedOperand: HTMLButtonElement = e.target;\r\n  trainer.firstOperand = +selectedOperand.getAttribute(\"data-operand\")!;\r\n\r\n  if (selectedOperand.classList.contains(\"active\")) {\r\n    unsetOperand();\r\n  } else {\r\n    setActiveOperand();\r\n  }\r\n\r\n  function setActiveOperand() {\r\n    document\r\n      .querySelector(\".modal-container button.active\")\r\n      ?.classList.remove(\"active\");\r\n    selectedOperand.classList.add(\"active\");\r\n  }\r\n\r\n  function unsetOperand() {\r\n    trainer.firstOperand = null;\r\n    selectedOperand.classList.remove(\"active\");\r\n  }\r\n}\r\n\r\nfunction completeGame() {\r\n  if (score.score > Score.bestScore) score.setBestScore();\r\n  showBestScore();\r\n  trainer.firstOperand = null;\r\n\r\n  isPlaying = false;\r\n  initModal({ text: `Your score is ${score.score}` });\r\n}\r\n\r\nfunction startGame() {\r\n  isPlaying = true;\r\n\r\n  score.reset();\r\n  showScore(score.score);\r\n\r\n  expression = trainer.getRandomExpression();\r\n  expressionField!.textContent = expression;\r\n\r\n  initTimer();\r\n}\r\n\r\nconst score = new Score({ by: 10, onIncrement: (score) => showScore(score) });\r\n\r\nconst showBestScore = () => {\r\n  const bestScoreElement = document.getElementById(\"js-best-score\");\r\n  bestScoreElement!.textContent = Score.bestScore.toString();\r\n};\r\n\r\nconst showScore = (score: number) => {\r\n  const scoreElement = document.getElementById(\"js-score\");\r\n  if (!scoreElement) return;\r\n\r\n  scoreElement.textContent = score.toString();\r\n};\r\n\r\ninitModal({ text: \"Are you ready?\" });\r\nshowBestScore();\r\n\r\nfunction handleSubmitAnswer(this: HTMLFormElement, e: Event) {\r\n  e.preventDefault();\r\n  if (!isPlaying) return;\r\n  const inputAnswer: HTMLInputElement = this.querySelector(\r\n    \"input[name='answer']\"\r\n  ) as HTMLInputElement;\r\n\r\n  const correctAnswer = Calculator.calculateFromString(expression);\r\n\r\n  if (+inputAnswer.value === correctAnswer) {\r\n    setSuccessStyles();\r\n\r\n    setTimeout(() => {\r\n      resetInput(inputAnswer);\r\n      resetStyles();\r\n      setNewExpression();\r\n\r\n      score.increment();\r\n    }, 500);\r\n  } else {\r\n    setFailStyles();\r\n\r\n    setTimeout(() => {\r\n      resetStyles();\r\n      resetInput(inputAnswer);\r\n    }, 500);\r\n  }\r\n}\r\n\r\nfunction setNewExpression() {\r\n  expression = trainer.getRandomExpression();\r\n  expressionField!.textContent = expression;\r\n}\r\n\r\nfunction resetInput(input: HTMLInputElement) {\r\n  input.value = \"\";\r\n}\r\n\r\nfunction setFailStyles() {\r\n  resetStyles();\r\n\r\n  expressionField?.classList.add(\"fail\");\r\n  answerForm?.querySelector(\"input[name='answer']\")?.classList.add(\"fail\");\r\n}\r\n\r\nfunction setSuccessStyles() {\r\n  resetStyles();\r\n\r\n  expressionField?.classList.add(\"correct\");\r\n  answerForm?.querySelector(\"input[name='answer']\")?.classList.add(\"correct\");\r\n}\r\n\r\nfunction resetStyles() {\r\n  expressionField?.classList.remove(\"fail\");\r\n  answerForm?.querySelector(\"input[name='answer']\")?.classList.remove(\"fail\");\r\n  expressionField?.classList.remove(\"correct\");\r\n  answerForm\r\n    ?.querySelector(\"input[name='answer']\")\r\n    ?.classList.remove(\"correct\");\r\n}\r\n"]}